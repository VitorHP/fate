
= simple_form_for @character, html: { class: 'character-form' } do |f|
  .row
    %fieldset#character-fields.col-sm-6
      %h2.header= t(".id")
      .character-name
        = f.input :name, label: false, placeholder: t("activerecord.attributes.character.name")
        = f.input :description, label: false, placeholder: t("activerecord.attributes.character.description"), input_html: { rows: 6 }
      .character-refresh
        = f.input :refresh, label: false, placeholder: t("activerecord.attributes.character.refresh")

    %fieldset#aspects-panel.col-sm-6
      %h2.header
        = t(".aspects")
      = link_to_add_association f, :aspects, data: { :'association-insertion-traversal' => :next, :'association-insertion-method' => :append } do
        .fa.fa-plus
      = f.fields_for :aspects do |a|
        = render "aspect_fields", f: a
  .row
    #skill-panel.col-sm-12
      %h2.header= t(".skills")
      %fieldset#skills
        - Ladder.new.to_h(from: Campaign.vanilla_fate_core.skill_cap, to: :averag).each_pair do |name, level|
          %div{ class: name }
            .skill-row.skills.row
              .rating-level.col-sm-2
                %span.rating= "#{t("ladder.#{name.to_s}")} (+#{level})"
              %ul.slots.list-inline.col-sm-10
                = f.fields_for :ratings, @character.ratings.select{ |r| r.level == level } do |r|
                  %li
                    = r.input :id, as: :hidden
                    = r.input :skill_id, collection: Skill.from_skill_group(params[:skill_group_id] || SkillGroup::FATE_CORE).sort_by{ |s| s.name }, label: false
                    = r.input :level, as: :hidden, input_html: { value: level }

  .row
    %fieldset#stunts-panel.col-sm-6
      %h2.header= t(".stunts")
      = link_to_add_association f, :stunts, data: { :'association-insertion-traversal' => :next, :'association-insertion-method' => :append } do
        .fa.fa-plus
      = f.fields_for :stunts do |s|
        = render "stunt_fields", f: s
    %fieldset#extras-panel.col-sm-6
      %h2.header= t(".extras")
      = link_to_add_association f, :extras, data: { :'association-insertion-traversal' => :next, :'association-insertion-method' => :append } do
        .fa.fa-plus
      = f.fields_for :extras do |s|
        = render "extra_fields", f: s
  .row
    %fieldset#stress-tracks-panel.col-sm-6
      %h2.header= "#{t("activerecord.models.stress_track", count: 2)}"
      = link_to_add_association f, :stress_tracks, data: { :'association-insertion-traversal' => :next, :'association-insertion-method' => :append }, render_options: { locals: { levels: [{ level: 1, checked: false }, { level: 2, checked: false }, { level: 3, checked: false }, { level: 4, checked: false } ] }} do
        .fa.fa-plus
      = f.fields_for :stress_tracks do |s|
        = render "stress_track_fields", f: s

    %fieldset#consequences-panel.col-sm-6
      %h2.header= t(".consequences")
      .row
        %fieldset#fixed-consequences.col-sm-6.form-horizontal
          = f.fields_for :consequences, @character.consequences.select{ |c| c.skill_id.nil? } do |s|
            = render 'consequence_fields', s: s
        %fieldset#extra-consequences.col-sm-6.form-horizontal
          = f.fields_for :consequences, @character.consequences.select{ |c| c.skill_id.present? } do |s|
            = render 'consequence_fields', s: s
  .row
    .col-sm-12
      = f.button :submit
